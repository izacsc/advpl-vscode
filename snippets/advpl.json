{
    "If": {
        "prefix": "if",
        "body": [
            "If $lCond",
            "\t$0",
            "EndIf"
        ],
        "description": "If Statement"
    },
    "If Else": {
        "prefix": "ifelse",
        "body": [
            "If $lCond",
            "\t$0",
            "Else",
            "\t",
            "EndIf"
        ],
        "description": "If Else Statement"
    },
    "If ElseIf": {
        "prefix": "ifelseif",
        "body": [
            "If $lCond1",
            "\t$0",
            "ElseIf $lCond2",
            "\t",
            "EndIf"
        ],
        "description": "If ElseIf Statement"
    },
    "While": {
        "prefix": "while",
        "body": [
            "While ($lCond)",
            "\t$0",
            "End"
        ],
        "description": "While Statement"
    },
    "For": {
        "prefix": "for",
        "body": [
            "For $nX := 1 To Len($aArray)",
            "\t$0",
            "Next"
        ],
        "description": "For Statement"
    },
    "Case": {
        "prefix": "docase",
        "body": [
            "Do Case",
            "\tCase $lCond ",
            "\t$0",
            "\tOtherwise",
            "EndCase"
        ],
        "description": "Do Case Statement"
    },
    "Query": {
        "prefix": "query",
        "body": [
            "Local $cQuery := \"\"",
            "$cQuery := \"query\"",
            "$cQuery := ChangeQuery($cQuery)",
            "DbUseArea(.T., \"TOPCONN\", TCGenQry( , , $cQuery), (cAlias), .F., .T.)",
            "While (cAlias)->(!Eof())",
            "",
            "\t(cAlias)->(DbSkip())",
            "End",
            "(cAlias)->(DbCloseArea())"
        ],
        "description": "Cria a função de Query ja efetuando a conexão com o TOP e efetuando o While"
    },
    "Help": {
        "prefix": "help",
        "body": [
            "Help(' ',1,$cabecalho ,,$descricao,2,0,,,,,, $solucao)"
        ],
        "description": "Função de Help\nExemplo\nHELP(' ',1,'Help1' ,,'campo nao preenchido',2,0,,,,,, {'preencha o campo'})"
    },
    "Protheusdoc": {
        "prefix": "protheusdoc",
        "body": [
            "/*/{Protheus.doc} $FunctionName",
            "(description)",
            "",
            "@author $user",
            "@since  $date",
            "/*/"
        ],
        "description": "Protheus doc"
    },
    "Function": {
        "prefix": "Function",
        "body": [
            "/*/{Protheus.doc} $FunctionName",
            "(description)",
            "",
            "@author $user",
            "@since  $date",
            "/*/",
            "${1|Static Function,User Function,Function|} $FunctionName()",
            "\t$0",
            "Return $return"
        ],
        "description": "Declaração de uma Function já com  Protheus.doc"
    },
    "@param": {
        "prefix": "@param",
        "body": [
            "@param  ${1:paramvar}, ${2|array,block,codeblock,character,date,logical,numeric,object|}, ${3:description}"
        ],
        "description": "Descricao de um parâmetro."
    },
    "@return": {
        "prefix": "@return",
        "body": [
            "@return  ${1:returnvar}, ${2|array,block,codeblock,character,date,logical,numeric,object|}, ${3:description}"
        ],
        "description": "Descricao do retorno."
    }
}